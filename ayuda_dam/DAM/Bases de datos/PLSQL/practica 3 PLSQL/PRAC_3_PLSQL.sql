
/*******************************
*   PRACTICA 3 DE PL-SQL       *
*   MANUEL GUTIERREZ TORRERO   *
*   1º D.A.M.                  *
********************************/

/*PRACTICA SOBRE USO DE PROCEDIMIENTOS , FUNCIONES Y TRIGGERS: LA PRINCIPAL
DIFERENCIA ENTRE LOS PROCEDIMIENTOS Y LAS FUNCIONES ES QUE LAS FUNCIONES DEVUELVEN
EL VALOR AL BLOQUE ANONIMO Y LOS PROCEDIMIENTOS CAMBIAN EL VALOR DE LAS VARIABLES
POR REFERENCIA*/

/*  CREACION DE TABLAS  Y SECUENCIAS*/

CREATE SEQUENCE S1_OBJ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999
CYCLE
ORDER
NOCACHE;

CREATE SEQUENCE S1_CORREO
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999
CYCLE
ORDER
NOCACHE;

CREATE SEQUENCE S1_ROL
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999
CYCLE
ORDER
NOCACHE;

CREATE SEQUENCE S1_USUARIO
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999
CYCLE
ORDER
NOCACHE;

CREATE SEQUENCE S1_CORREO
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 999
CYCLE
ORDER
NOCACHE;

CREATE TABLE ROL(
  IDEROL NUMBER(3),
  NOMROL VARCHAR2(15),
  CONSTRAINT PK_ROL PRIMARY KEY (IDEROL));

CREATE TABLE USUARIO(
  IDEUSU NUMBER(3),
  IDEROL NUMBER(3),
  USR VARCHAR2(10),
  PWD VARCHAR2(15),
  MAIL VARCHAR2(20),
  CONSTRAINT PK_USUARIO PRIMARY KEY (IDEUSU),
  CONSTRAINT FK_USUARIO_ROL FOREIGN KEY (IDEROL) REFERENCES ROL);

CREATE TABLE OBJETO(
  IDEOBJ NUMBER(3),
  NOMOBJ VARCHAR2(30),
  CONSTRAINT PK_OBJETO PRIMARY KEY (IDEOBJ));
  
CREATE TABLE ROLOBJ(
  IDEROL NUMBER(3),
  IDEOBJ NUMBER(3),
  CONSTRAINT FK__ROLOBJ_OBJETO FOREIGN KEY (IDEOBJ) REFERENCES OBJETO,
  CONSTRAINT FK__ROLOBJ_ROL FOREIGN KEY (IDEROL) REFERENCES ROL);

CREATE TABLE CORREO(
  IDECOR NUMBER(3),
  IDEUSU NUMBER(3),
  MENSAJE VARCHAR2(100),
  MAIL  VARCHAR2(20),
  FECHA DATE,
  ENVIADO NUMBER(1),
  CONSTRAINT PK_CORREO PRIMARY KEY (IDECOR),
  CONSTRAINT FK_CORREO_USUARIO FOREIGN KEY (IDEUSU) REFERENCES USUARIO);
  
  /*  APARTADO DE INSERTS  */


INSERT INTO ROL (IDEROL,NOMROL) VALUES (S1_ROL.NEXTVAL,'ADMINISTRADOR');
INSERT INTO ROL (IDEROL,NOMROL) VALUES (S1_ROL.NEXTVAL,'INVITADO');
INSERT INTO ROL (IDEROL,NOMROL) VALUES (S1_ROL.NEXTVAL,'SECRETARIO');

INSERT INTO USUARIO (IDEUSU,IDEROL,USR,PWD,MAIL) VALUES (S1_USUARIO.NEXTVAL,2,'USU1','USU1','MAIL1');
INSERT INTO USUARIO (IDEUSU,IDEROL,USR,PWD,MAIL) VALUES (S1_USUARIO.NEXTVAL,3,'USU2','USU2','MAIL2');
INSERT INTO USUARIO (IDEUSU,IDEROL,USR,PWD,MAIL) VALUES (S1_USUARIO.NEXTVAL,1,'USU3','USU3','MAIL3');
INSERT INTO USUARIO (IDEUSU,IDEROL,USR,PWD,MAIL) VALUES (S1_USUARIO.NEXTVAL,2,'USU4','USU4','MAIL4');

INSERT INTO OBJETO (IDEOBJ,NOMOBJ) VALUES (S1_OBJ.NEXTVAL,'LABEL1');
INSERT INTO OBJETO (IDEOBJ,NOMOBJ) VALUES (S1_OBJ.NEXTVAL,'CAMPO_TEXTO1');
INSERT INTO OBJETO (IDEOBJ,NOMOBJ) VALUES (S1_OBJ.NEXTVAL,'BOTON1: ALTA');
INSERT INTO OBJETO (IDEOBJ,NOMOBJ) VALUES (S1_OBJ.NEXTVAL,'BOTON2: MODIFICACION');
INSERT INTO OBJETO (IDEOBJ,NOMOBJ) VALUES (S1_OBJ.NEXTVAL,'BOTON3: BAJA');
INSERT INTO OBJETO (IDEOBJ,NOMOBJ) VALUES (S1_OBJ.NEXTVAL,'BOTON4: ACEPTAR');

INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (1,1);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (1,2);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (1,3);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (1,4);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (1,5);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (1,6);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (2,1);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (2,2);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (2,3);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (2,4);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (2,6);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (3,1);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (3,2);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (3,3);
INSERT INTO ROLOBJ (IDEROL,IDEOBJ) VALUES (3,6);

COMMIT;

/* *** APARTADO A *** */

CREATE OR REPLACE PACKAGE PCKUSUARIO  AS
  FUNCTION EXISTEUSR (NOM IN USUARIO.USR%TYPE) RETURN BOOLEAN;
  FUNCTION CLAVEUSR (NOM IN USUARIO.USR%TYPE) RETURN NUMBER;
  FUNCTION CREAUSR (NOM IN USUARIO.USR%TYPE,ROL IN ROL.IDEROL%TYPE,PWD IN USUARIO.PWD%TYPE,MAIL IN USUARIO.MAIL%TYPE) RETURN BOOLEAN;
  FUNCTION ELIMINARUSR (NOM IN USUARIO.USR%TYPE) RETURN BOOLEAN;
  FUNCTION CAMBIACONUSR (NOM IN USUARIO.USR%TYPE,OLDPWDUSR IN USUARIO.PWD%TYPE,NEWPWDUSR IN USUARIO.PWD%TYPE) RETURN NUMBER;
END PCKUSUARIO;

CREATE OR REPLACE PACKAGE BODY PCKUSUARIO  AS
 /* ->*/FUNCTION EXISTEUSR(NOM IN USUARIO.USR%TYPE) RETURN BOOLEAN AS
   CONT NUMBER(2):=0;
   BEGIN
      SELECT COUNT(*) INTO CONT FROM USUARIO WHERE (USR=NOM);
      IF CONT>=1 THEN
        RETURN TRUE;
      ELSE
        RETURN FALSE;
      END IF;
   END EXISTEUSR;
/* ->*/FUNCTION CLAVEUSR(NOM IN USUARIO.USR%TYPE) RETURN NUMBER AS
   IDE NUMBER(3):=0;
   CONT NUMBER(2):=0;
   BEGIN
      SELECT COUNT(*) INTO CONT FROM USUARIO WHERE (USR=NOM);
      IF (CONT>=1) THEN
        SELECT IDEUSU INTO IDE FROM USUARIO WHERE (USR=NOM);
        RETURN IDE;
      ELSE
        RETURN 0;
      END IF;
      
   END CLAVEUSR;

/* ->*/FUNCTION CREAUSR (NOM IN USUARIO.USR%TYPE,ROL IN ROL.IDEROL%TYPE,PWD IN USUARIO.PWD%TYPE,MAIL IN USUARIO.MAIL%TYPE) RETURN BOOLEAN AS
   VER BOOLEAN:=FALSE;
   BEGIN
      VER:=EXISTEUSR(NOM);
      IF (VER=TRUE) THEN
         RETURN FALSE;
      ELSE
         
         INSERT INTO USUARIO (IDEUSU,IDEROL,USR,PWD,MAIL) VALUES (S1_USUARIO.NEXTVAL,ROL,NOM,PWD,MAIL);
         RETURN TRUE;
      END IF;
   END CREAUSR;

/* ->*/FUNCTION ELIMINARUSR (NOM IN USUARIO.USR%TYPE) RETURN BOOLEAN AS
    VER BOOLEAN:=FALSE;
   BEGIN
      VER:=EXISTEUSR(NOM);
      IF (VER=TRUE) THEN
       
        DELETE FROM USUARIO WHERE (USR=NOM);
        
        RETURN TRUE;
      ELSE
         RETURN FALSE;
      END IF;
   END ELIMINARUSR;


 /* ->*/FUNCTION CAMBIACONUSR (NOM IN USUARIO.USR%TYPE,OLDPWDUSR IN USUARIO.PWD%TYPE,NEWPWDUSR IN USUARIO.PWD%TYPE) RETURN NUMBER AS
   PASS USUARIO.PWD%TYPE;
   CONT NUMBER(1):=0;
   VER BOOLEAN:=FALSE;
   BEGIN
     SELECT COUNT(*) INTO CONT FROM USUARIO WHERE (PWD=OLDPWDUSR);
     VER:=EXISTEUSR(NOM);
     IF(CONT=1 AND VER=TRUE) THEN
         UPDATE USUARIO SET PWD=NEWPWDUSR WHERE  (USR=NOM);
         RETURN 1;
     ELSE
       IF(VER=TRUE) THEN
           RETURN 2;
       ELSE
           RETURN 3;
       END IF;
     END IF;
   END CAMBIACONUSR;
END PCKUSUARIO;

/* *** FIN APARTADO A *** */

/* *** APARTADO B *** */

CREATE OR REPLACE PACKAGE PCKROLOBJ  AS
  PROCEDURE EXISTEIDEROL (NOMR IN ROL.NOMROL%TYPE,IDER OUT ROL.IDEROL%TYPE,EXISTE OUT BOOLEAN);
  FUNCTION CREAROL (NOMROL IN ROL.NOMROL%TYPE) RETURN BOOLEAN;
  PROCEDURE EXISTEIDEOBJ (NOMO IN OBJETO.NOMOBJ%TYPE,IDEO OUT OBJETO.IDEOBJ%TYPE,EXISTE OUT BOOLEAN);
  FUNCTION CREAOBJ (NOMO IN OBJETO.NOMOBJ%TYPE) RETURN BOOLEAN;
  PROCEDURE AGREGAROLOBJ (IDER IN ROL.IDEROL%TYPE,IDEO IN OBJETO.IDEOBJ%TYPE,EXISTE OUT BOOLEAN,AGREGADO OUT BOOLEAN);
  PROCEDURE QUITAROLOBJ (IDER IN ROL.IDEROL%TYPE,IDEO IN OBJETO.IDEOBJ%TYPE,EXISTE OUT BOOLEAN,QUITADO OUT BOOLEAN);
END PCKROLOBJ;

CREATE OR REPLACE PACKAGE BODY PCKROLOBJ  AS

/* -> */PROCEDURE EXISTEIDEROL (NOMR IN ROL.NOMROL%TYPE,IDER OUT ROL.IDEROL%TYPE,EXISTE OUT BOOLEAN) AS
   CONT NUMBER(2):=0;
   BEGIN
      SELECT COUNT(*) INTO CONT FROM ROL WHERE (NOMROL=NOMR);
      IF CONT>=1 THEN
        SELECT IDEROL INTO IDER FROM ROL WHERE (NOMROL=NOMR);
        EXISTE:=TRUE;
      ELSE
        IDER:=0;
        EXISTE:=FALSE;
      END IF;
   END EXISTEIDEROL;
   
/* -> */FUNCTION CREAROL (NOMROL IN ROL.NOMROL%TYPE) RETURN BOOLEAN AS
   CONT NUMBER(2):=0;
   BEGIN
      SELECT COUNT(*) INTO CONT FROM ROL WHERE (NOMROL=NOMROL);
      IF CONT>=1 THEN
        
        RETURN FALSE;
      ELSE
        INSERT INTO ROL (IDEROL,NOMROL) VALUES (S1_ROL.NEXTVAL,NOMROL);
        RETURN TRUE;
      END IF;
   END CREAROL;
/* -> */PROCEDURE EXISTEIDEOBJ (NOMO IN OBJETO.NOMOBJ%TYPE,IDEO OUT OBJETO.IDEOBJ%TYPE,EXISTE OUT BOOLEAN) AS
      CONT NUMBER(2):=0;
	  BEGIN
      SELECT COUNT(*) INTO CONT FROM OBJETO WHERE (NOMOBJ=NOMO);
      IF CONT>=1 THEN
        SELECT IDEOBJ INTO IDEO FROM OBJETO WHERE (NOMOBJ=NOMO);
        EXISTE:=TRUE;
      ELSE
        IDEO:=0;
        EXISTE:=FALSE;
      END IF;   
   END EXISTEIDEOBJ;
/* -> */FUNCTION CREAOBJ (NOMO IN OBJETO.NOMOBJ%TYPE) RETURN BOOLEAN AS
   CONT NUMBER(2):=0;
   BEGIN
      SELECT COUNT(*) INTO CONT FROM OBJETO WHERE (NOMOBJ=NOMO);
      IF CONT>=1 THEN
        
        RETURN FALSE;
      ELSE
        INSERT INTO OBJETO (IDEOBJ,NOMOBJ) VALUES (S1_OBJ.NEXTVAL,NOMO);
        RETURN TRUE;
      END IF;   
   END CREAOBJ;
/* -> */PROCEDURE AGREGAROLOBJ (IDER IN ROL.IDEROL%TYPE,IDEO IN OBJETO.IDEOBJ%TYPE,EXISTE OUT BOOLEAN,AGREGADO OUT BOOLEAN) AS
    IDERO ROL.IDEROL%TYPE;
    IDEOB OBJETO.IDEOBJ%TYPE;
    BEGIN
	  SELECT IDEROL,IDEOBJ INTO IDERO,IDEOB FROM ROLOBJ WHERE (IDEROL=IDER AND IDEOBJ=IDEO);
	  IF(IDERO=IDER AND IDEOB=IDEO) THEN
	     EXISTE:=TRUE;
		 AGREGADO:=FALSE;
	  ELSE
	     EXISTE:=FALSE;
		   AGREGADO:=TRUE;
	  END IF;
   END AGREGAROLOBJ;
/* -> */PROCEDURE QUITAROLOBJ (IDER IN ROL.IDEROL%TYPE,IDEO IN OBJETO.IDEOBJ%TYPE,EXISTE OUT BOOLEAN,QUITADO OUT BOOLEAN) AS
      IDERO ROL.IDEROL%TYPE;
	    IDEOB OBJETO.IDEOBJ%TYPE;
      BEGIN
	  SELECT IDEROL,IDEOBJ INTO IDERO,IDEOB FROM ROLOBJ WHERE (IDEROL=IDER AND IDEOBJ=IDEO);
	  IF(IDER=IDERO AND IDEO=IDEOB) THEN
	     EXISTE:=TRUE;
		   QUITADO:=TRUE;
	  ELSE
	     EXISTE:=FALSE;
		   QUITADO:=FALSE;
	  END IF;
      
   END QUITAROLOBJ;
   
END PCKROLOBJ;

/* *** FIN APARTADO B *** */

/* *** APARTADO C *** */

SET SERVEROUTPUT ON FORMAT WORD_WRAPPED;
DECLARE
  VER BOOLEAN:=FALSE;
  IDE NUMBER(3):=0;
  USR VARCHAR2(20):='USU1';
  NUM NUMBER(1);
  EXISTE BOOLEAN:=FALSE;
  AGREGADO BOOLEAN:=FALSE;
  QUITADO BOOLEAN:=FALSE;
  NOMR ROL.NOMROL%TYPE:='NOM';
  IDER ROL.IDEROL%TYPE:=0;
  NOMO OBJETO.NOMOBJ%TYPE:='NOM';
  IDEO OBJETO.IDEOBJ%TYPE:=0;
BEGIN 

   /*COMPROBACION DEL APARTADO A*/
   
   /*->*/VER:=PCKUSUARIO.EXISTEUSR(USR);
   IF (VER=TRUE) THEN
      DBMS_OUTPUT.PUT_LINE('EL USUARIO EXISTE');
   ELSE
      DBMS_OUTPUT.PUT_LINE('EL USUARIO NO EXISTE');
   END IF;
   /*->*/IDE:=PCKUSUARIO.CLAVEUSR(USR);
   DBMS_OUTPUT.PUT_LINE('IDE DEL USUARIO '||USR||': '||IDE);
   /*->*/VER:=PCKUSUARIO.CREAUSR('USU5',2,'CNTUSU5','PEPITO@HOTMAIL.COM');
   IF(VER=TRUE) THEN
     DBMS_OUTPUT.PUT_LINE('USUARIO INSERTADO');
   ELSE
     DBMS_OUTPUT.PUT_LINE('USUARIO NO INSERTADO');
   END IF;   
   /*->*/VER:=PCKUSUARIO.ELIMINARUSR('USU5');
   IF(VER=TRUE) THEN
     DBMS_OUTPUT.PUT_LINE('USUARIO ELIMINADO');
   ELSE
     DBMS_OUTPUT.PUT_LINE('USUARIO NO ELIMINADO');
   END IF;
   /*->*/NUM:=PCKUSUARIO.CAMBIACONUSR('USU1','USU1','NUEVACONT');
   DBMS_OUTPUT.PUT_LINE('NUM: '||NUM);
      CASE 
        WHEN NUM=1 THEN
          DBMS_OUTPUT.PUT_LINE('USUARIO CAMBIADO');
        WHEN NUM=2 THEN
          DBMS_OUTPUT.PUT_LINE('LA CONTRASEÑA NO COINCIDE');
       ELSE
          DBMS_OUTPUT.PUT_LINE('EL USUARIO NO EXISTE');
      END CASE;
      
  /*COMPROBACION APARTADO B*/

 
     NOMR:='ADMINISTRADOR';
     /*->*/PCKROLOBJ.EXISTEIDEROL(NOMR,IDER,EXISTE);
     IF(EXISTE=TRUE)THEN
        DBMS_OUTPUT.PUT_LINE('ROL: '||NOMR||' IDE: '||IDER);
     ELSE
        DBMS_OUTPUT.PUT_LINE('EL ROL NO EXISTE');
     END IF;
     /*->*/VER:=PCKROLOBJ.CREAROL('INFORMATICO');
     IF(VER=TRUE)THEN
         DBMS_OUTPUT.PUT_LINE('ROL CREADO CON EXITO');
     ELSE
         DBMS_OUTPUT.PUT_LINE('EL ROL YA EXISTE');
     END IF;
     NOMO:='LABEL1';
     /*->*/PCKROLOBJ.EXISTEIDEOBJ(NOMO,IDEO,EXISTE);
     IF(EXISTE=TRUE)THEN
        DBMS_OUTPUT.PUT_LINE('OBJETO: '||NOMO||' IDE:'||IDER);
     ELSE
        DBMS_OUTPUT.PUT_LINE('EL OBJETO NO EXISTE');
     END IF;
     NOMO:='OBJETO_NUEVO';
     /*->*/VER:=PCKROLOBJ.CREAOBJ(NOMO);
     IF(VER=TRUE) THEN
         DBMS_OUTPUT.PUT_LINE('OBJETO CREADO CON EXITO');
     ELSE
         DBMS_OUTPUT.PUT_LINE('EL OBJETO YA EXISTE');
     END IF;
     IDER:=1;
     IDEO:=2;
     /*->*/PCKROLOBJ.AGREGAROLOBJ(IDER,IDEO,EXISTE,AGREGADO);
     IF(EXISTE=TRUE)THEN
        DBMS_OUTPUT.PUT_LINE('YA EXISTE LA RELACION');
     ELSE
        DBMS_OUTPUT.PUT_LINE('RELACION AGREGADA CON EXITO');
     END IF;
     IDER:=1;
     IDEO:=2;
    /*->*/PCKROLOBJ.QUITAROLOBJ(IDER,IDEO,EXISTE,QUITADO);
    IF(EXISTE=TRUE)THEN
        DBMS_OUTPUT.PUT_LINE('LA RELACION NO EXISTE');
     ELSE
        DBMS_OUTPUT.PUT_LINE('RELACION ELIMINADA CON EXITO');
     END IF;
 
END;
/

/* *** APARTADO D *** */
/*1*/

CREATE OR REPLACE TRIGGER TRIGGER_BEFORE
BEFORE INSERT ON USUARIO
FOR EACH ROW
DECLARE
  CURSOR CRUSU IS SELECT * FROM  USUARIO WHERE IDEROL=2;
  REG USUARIO%ROWTYPE;
  TUSR USUARIO.USR%TYPE;
  TMENSAJE CORREO.MENSAJE%TYPE;
BEGIN
  TUSR:=:NEW.USR;
  TMENSAJE:='USUARIO '||TUSR||' INSERTADO';
  OPEN CRUSU;
    FETCH CRUSU INTO REG;
    WHILE(CRUSU%FOUND)LOOP
        FETCH CRUSU INTO REG;
        INSERT INTO CORREO (IDECOR,IDEUSU,MENSAJE,MAIL,FECHA,ENVIADO) VALUES (S1_CORREO.NEXTVAL,REG.IDEUSU,TMENSAJE,REG.MAIL,SYSDATE,0);
    END LOOP;
  CLOSE CRUSU;
END TRIGGER_BEFORE;
/

/*
COMPROBACIONES

INSERT INTO USUARIO (IDEUSU,IDEROL,USR,PWD,MAIL) VALUES (S1_USUARIO.NEXTVAL,1,'USU4','USU4','MAILNUE');
SELECT * FROM CORREO;
SELECT * FROM USUARIO;
*/

/*2*/

CREATE OR REPLACE TRIGGER CONTRASENA_TRIGGER_AFTER
AFTER UPDATE  ON USUARIO
FOR EACH ROW
DECLARE
   PASSNUEVA USUARIO.PWD%TYPE;
   IDUSU  USUARIO.IDEUSU%TYPE;
   MAILUSU USUARIO.MAIL%TYPE;
   TMENSAJE CORREO.MENSAJE%TYPE;
BEGIN 
  IF (UPDATING) THEN
      IDUSU:=:NEW.IDEUSU;
      MAILUSU:=:NEW.MAIL;
      TMENSAJE:='CONTRASEÑA'||:OLD.PWD||' CAMBIADA POR '||:NEW.PWD;
      INSERT INTO CORREO (IDECOR,IDEUSU,MENSAJE,MAIL,FECHA,ENVIADO) VALUES (S1_CORREO.NEXTVAL,IDUSU,TMENSAJE,MAILUSU,SYSDATE,0);
  END IF;

END CONTRASENA_TRIGGER_AFTER;
/
/*
COMROBACIONES

UPDATE USUARIO SET PWD='PRUEBATRIG' WHERE  (USR='USU1');
SELECT * FROM CORREO;
SELECT * FROM USUARIO;
*/

/*3*/

CREATE OR REPLACE TRIGGER ELIMINAR_TRIGGER_AFTER
AFTER UPDATE  ON USUARIO
FOR EACH ROW
DECLARE
   IDUSU  USUARIO.IDEUSU%TYPE;
   MAILUSU USUARIO.MAIL%TYPE;
   FECHA DATE;
BEGIN 
   
   IF (DELETING) THEN
     IDUSU:=:OLD.IDEUSU;
     MAILUSU:=:OLD.MAIL;
     SELECT SYSDATE INTO FECHA FROM DUAL;
     INSERT INTO CORREO (IDECOR,IDEUSU,MENSAJE,MAIL,FECHA,ENVIADO) VALUES (S1_CORREO.NEXTVAL,IDUSU,'USUARIO DADO DE BAJA',MAILUSU,FECHA,0);
  END IF;

END ELIMINAR_TRIGGER_AFTER;
/

/*
COMPROBACIONES

DELETE FROM USUARIO WHERE(IDEUSU=41);
SELECT * FROM CORREO;
SELECT * FROM USUARIO;
*/

/* FIN APARTADO D*/

